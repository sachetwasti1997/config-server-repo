twitter-to-kafka-service:
  twitter-keywords:
    - Java
    - Microservices
    - Spring
    - Kafka
    - Elasticsearch
  enable-v2-tweets: false
  enable-mock-tweets: true
  mock-min-tweet-length: 5
  mock-max-tweet-length: 15
  mock-sleep-ms: 1000
  twitter-v2-base-url: random
  twitter-v2-rules-base-url: random
  twitter-v2-bearer-token: random

retry-config:
  initial-interval-ms: 1000
  max-interval-ms: 10000
  multiplier: 2.0
  maxAttempts: 3
  sleep-time-ms: 2000

kafka-config:
  bootstrap-servers: localhost:19092,localhost:19093,localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  topic-name: twitter-topic
  topic-names-to-create:
    - twitter-topic
  num-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5

# snappy compression: Arranges compression ratio for higher compress/decompress speed, snappy is compression
#                   library from google and is faster than other compressions. Provides less compression
# acks:
# all: wait ack from all replicas
# 1: wait only current broker's acknowledgement
# 0: no acknowledgement
# batchsize: Tune for higher throughput
# lingerms: add light load on producer in case of light load